{"version":3,"file":"PluginListPage.8ebbdf9b5ec12c4a02bd.js","mappings":"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","sources":["webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginDisabledBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/sharedStyles.ts","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginInstallBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginEnterpriseBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginUpdateAvailableBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginAngularBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/Badges/PluginDeprecatedBadge.tsx","webpack://grafana/./public/app/features/plugins/admin/components/RoadmapLinks.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginListItemBadges.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginLogo.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginListItem.tsx","webpack://grafana/./public/app/features/plugins/admin/components/PluginList.tsx","webpack://grafana/./public/app/features/plugins/admin/components/SearchField.tsx","webpack://grafana/./public/app/features/plugins/admin/hooks/useHistory.tsx","webpack://grafana/./public/app/features/plugins/admin/pages/Browse.tsx","webpack://grafana/./public/app/features/plugins/admin/state/selectors.ts","webpack://grafana/./public/app/features/plugins/admin/state/hooks.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { PluginErrorCode } from '@grafana/data';\nimport { Badge } from '@grafana/ui';\n\ntype Props = { error?: PluginErrorCode };\n\nexport function PluginDisabledBadge({ error }: Props): React.ReactElement {\n  const tooltip = errorCodeToTooltip(error);\n  return <Badge icon=\"exclamation-triangle\" text=\"Disabled\" color=\"red\" tooltip={tooltip} />;\n}\n\nfunction errorCodeToTooltip(error?: PluginErrorCode): string | undefined {\n  switch (error) {\n    case PluginErrorCode.modifiedSignature:\n      return 'Plugin disabled due to modified content';\n    case PluginErrorCode.invalidSignature:\n      return 'Plugin disabled due to invalid plugin signature';\n    case PluginErrorCode.missingSignature:\n      return 'Plugin disabled due to missing plugin signature';\n    case null:\n    case undefined:\n      return 'Plugin disabled';\n    default:\n      return `Plugin disabled due to unknown error${error ? `: ${error}` : ''}`;\n  }\n}\n","import { css } from '@emotion/css';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nexport const getBadgeColor = (theme: GrafanaTheme2) => css`\n  background: ${theme.colors.background.primary};\n  border-color: ${theme.colors.border.strong};\n  color: ${theme.colors.text.secondary};\n`;\n","import * as React from 'react';\n\nimport { Badge, useStyles2 } from '@grafana/ui';\n\nimport { getBadgeColor } from './sharedStyles';\n\nexport function PluginInstalledBadge(): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n  return <Badge text=\"Installed\" color=\"orange\" className={customBadgeStyles} />;\n}\n","import * as React from 'react';\n\nimport { featureEnabled } from '@grafana/runtime';\nimport { Badge, PluginSignatureBadge, Stack, useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../../types';\n\nimport { getBadgeColor } from './sharedStyles';\n\ntype Props = { plugin: CatalogPlugin };\n\nexport function PluginEnterpriseBadge({ plugin }: Props): React.ReactElement {\n  const customBadgeStyles = useStyles2(getBadgeColor);\n\n  if (featureEnabled('enterprise.plugins')) {\n    return <Badge text=\"Enterprise\" color=\"blue\" />;\n  }\n\n  return (\n    <Stack wrap={'wrap'}>\n      <PluginSignatureBadge status={plugin.signature} />\n      <Badge\n        icon=\"lock\"\n        role=\"img\"\n        aria-label=\"lock icon\"\n        text=\"Enterprise\"\n        color=\"blue\"\n        className={customBadgeStyles}\n        title=\"Requires a Grafana Enterprise license\"\n      />\n    </Stack>\n  );\n}\n","import { css } from '@emotion/css';\nimport * as React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../../types';\n\ntype Props = {\n  plugin: CatalogPlugin;\n};\n\nexport function PluginUpdateAvailableBadge({ plugin }: Props): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  return <p className={styles.hasUpdate}>Update available!</p>;\n}\n\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    hasUpdate: css`\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      margin-bottom: 0;\n    `,\n  };\n};\n","import * as React from 'react';\n\nimport { Badge } from '@grafana/ui';\n\nexport function PluginAngularBadge(): React.ReactElement {\n  return (\n    <Badge\n      icon=\"exclamation-triangle\"\n      text=\"Angular\"\n      color=\"orange\"\n      tooltip=\"This plugin uses deprecated functionality, support for which is being removed.\"\n    />\n  );\n}\n","import * as React from 'react';\n\nimport { Badge } from '@grafana/ui';\n\nexport function PluginDeprecatedBadge(): React.ReactElement {\n  return (\n    <Badge\n      icon=\"exclamation-triangle\"\n      text=\"Deprecated\"\n      color=\"orange\"\n      tooltip=\"This plugin is deprecated and no longer receives updates.\"\n    />\n  );\n}\n","import { reportInteraction } from '@grafana/runtime';\nimport { Space, TextLink } from '@grafana/ui';\nimport { Trans } from 'app/core/internationalization';\n\nexport const RoadmapLinks = () => {\n  return (\n    <div>\n      <Space v={2} />\n      <TextLink\n        href=\"https://github.com/grafana/grafana/issues/new?assignees=&labels=area%2Fdatasource%2Ctype%2Fnew-plugin-request&projects=&template=3-data_source_request.yaml&title=%5BNew+Data+Source%5D%3A+%3Cname-of-service%3E\"\n        onClick={() => reportInteraction('connections_data_source_request_clicked')}\n        external\n      >\n        <Trans i18nKey=\"connections.connect-data.request-data-source\">Request a new data source</Trans>\n      </TextLink>\n      <br />\n      <TextLink\n        href=\"https://github.com/orgs/grafana/projects/619/views/1?pane=info\"\n        onClick={() => reportInteraction('connections_data_source_roadmap_clicked')}\n        external\n      >\n        <Trans i18nKey=\"connections.connect-data.roadmap\">View roadmap</Trans>\n      </TextLink>\n    </div>\n  );\n};\n","import { PluginType } from '@grafana/data';\nimport { PluginSignatureBadge, Stack } from '@grafana/ui';\n\nimport { CatalogPlugin } from '../types';\n\nimport {\n  PluginEnterpriseBadge,\n  PluginDisabledBadge,\n  PluginInstalledBadge,\n  PluginUpdateAvailableBadge,\n  PluginAngularBadge,\n  PluginDeprecatedBadge,\n} from './Badges';\n\ntype PluginBadgeType = {\n  plugin: CatalogPlugin;\n};\n\nexport function PluginListItemBadges({ plugin }: PluginBadgeType) {\n  // Currently renderer plugins are not supported by the catalog due to complications related to installation / update / uninstall.\n  const hasUpdate = plugin.hasUpdate && !plugin.isCore && plugin.type !== PluginType.renderer;\n  if (plugin.isEnterprise) {\n    return (\n      <Stack height=\"auto\" wrap=\"wrap\">\n        <PluginEnterpriseBadge plugin={plugin} />\n        {plugin.isDisabled && <PluginDisabledBadge error={plugin.error} />}\n        {hasUpdate && !plugin.isManaged && <PluginUpdateAvailableBadge plugin={plugin} />}\n        {plugin.angularDetected && <PluginAngularBadge />}\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack height=\"auto\" wrap=\"wrap\">\n      <PluginSignatureBadge status={plugin.signature} />\n      {plugin.isDisabled && <PluginDisabledBadge error={plugin.error} />}\n      {plugin.isDeprecated && <PluginDeprecatedBadge />}\n      {plugin.isInstalled && <PluginInstalledBadge />}\n      {hasUpdate && !plugin.isManaged && <PluginUpdateAvailableBadge plugin={plugin} />}\n      {plugin.angularDetected && <PluginAngularBadge />}\n    </Stack>\n  );\n}\n","import * as React from 'react';\n\ntype PluginLogoProps = {\n  alt: string;\n  className?: string;\n  src: string;\n  height?: string | number;\n};\n\nexport function PluginLogo({ alt, className, src, height }: PluginLogoProps): React.ReactElement {\n  return <img src={src} className={className} alt={alt} loading=\"lazy\" height={height} />;\n}\n","import { css, cx } from '@emotion/css';\nimport Skeleton from 'react-loading-skeleton';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { locationService, reportInteraction } from '@grafana/runtime';\nimport { Badge, Icon, Stack, useStyles2 } from '@grafana/ui';\nimport { SkeletonComponent, attachSkeleton } from '@grafana/ui/src/unstable';\n\nimport { CatalogPlugin, PluginIconName, PluginListDisplayMode } from '../types';\n\nimport { PluginListItemBadges } from './PluginListItemBadges';\nimport { PluginLogo } from './PluginLogo';\n\nexport const LOGO_SIZE = '48px';\n\ntype Props = {\n  plugin: CatalogPlugin;\n  pathName: string;\n  displayMode?: PluginListDisplayMode;\n};\n\nfunction PluginListItemComponent({ plugin, pathName, displayMode = PluginListDisplayMode.Grid }: Props) {\n  const styles = useStyles2(getStyles);\n  const isList = displayMode === PluginListDisplayMode.List;\n\n  const reportUserClickInteraction = () => {\n    if (locationService.getSearchObject()?.q) {\n      reportInteraction('plugins_search_user_click', {});\n    }\n  };\n  return (\n    <a\n      href={`${pathName}/${plugin.id}`}\n      className={cx(styles.container, { [styles.list]: isList })}\n      onClick={reportUserClickInteraction}\n    >\n      <PluginLogo src={plugin.info.logos.small} className={styles.pluginLogo} height={LOGO_SIZE} alt=\"\" />\n      <h2 className={cx(styles.name, 'plugin-name')}>{plugin.name}</h2>\n      <div className={cx(styles.content, 'plugin-content')}>\n        <p>By {plugin.orgName}</p>\n        <PluginListItemBadges plugin={plugin} />\n      </div>\n      <div className={styles.pluginType}>\n        {plugin.type && <Icon name={PluginIconName[plugin.type]} title={`${plugin.type} plugin`} />}\n      </div>\n    </a>\n  );\n}\n\nconst PluginListItemSkeleton: SkeletonComponent<Pick<Props, 'displayMode'>> = ({\n  displayMode = PluginListDisplayMode.Grid,\n  rootProps,\n}) => {\n  const styles = useStyles2(getStyles);\n  const isList = displayMode === PluginListDisplayMode.List;\n\n  return (\n    <div className={cx(styles.container, { [styles.list]: isList })} {...rootProps}>\n      <Skeleton\n        containerClassName={cx(\n          styles.pluginLogo,\n          css({\n            lineHeight: 1,\n          })\n        )}\n        width={LOGO_SIZE}\n        height={LOGO_SIZE}\n      />\n      <h2 className={styles.name}>\n        <Skeleton width={100} />\n      </h2>\n      <div className={styles.content}>\n        <p>\n          <Skeleton width={120} />\n        </p>\n        <Stack direction=\"row\">\n          <Badge.Skeleton />\n          <Badge.Skeleton />\n        </Stack>\n      </div>\n      <div className={styles.pluginType}>\n        <Skeleton width={16} height={16} />\n      </div>\n    </div>\n  );\n};\n\nexport const PluginListItem = attachSkeleton(PluginListItemComponent, PluginListItemSkeleton);\n\n// Styles shared between the different type of list items\nexport const getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css({\n      display: 'grid',\n      gridTemplateColumns: `${LOGO_SIZE} 1fr ${theme.spacing(3)}`,\n      gridTemplateRows: 'auto',\n      gap: theme.spacing(2),\n      gridAutoFlow: 'row',\n      background: theme.colors.background.secondary,\n      borderRadius: theme.shape.radius.default,\n      padding: theme.spacing(3),\n      [theme.transitions.handleMotion('no-preference', 'reduce')]: {\n        transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color', 'color'], {\n          duration: theme.transitions.duration.short,\n        }),\n      },\n\n      '&:hover': {\n        background: theme.colors.emphasize(theme.colors.background.secondary, 0.03),\n      },\n    }),\n    list: css({\n      rowGap: 0,\n\n      '> img': {\n        alignSelf: 'start',\n      },\n\n      '> .plugin-content': {\n        minHeight: 0,\n        gridArea: '2 / 2 / 4 / 3',\n\n        '> p': {\n          margin: theme.spacing(0, 0, 0.5, 0),\n        },\n      },\n\n      '> .plugin-name': {\n        alignSelf: 'center',\n        gridArea: '1 / 2 / 2 / 3',\n      },\n    }),\n    pluginType: css({\n      gridArea: '1 / 3 / 2 / 4',\n      color: theme.colors.text.secondary,\n    }),\n    pluginLogo: css({\n      gridArea: '1 / 1 / 3 / 2',\n      maxWidth: '100%',\n      alignSelf: 'center',\n      objectFit: 'contain',\n    }),\n    content: css({\n      gridArea: '3 / 1 / 4 / 3',\n      color: theme.colors.text.secondary,\n    }),\n    name: css({\n      gridArea: '1 / 2 / 3 / 3',\n      alignSelf: 'center',\n      fontSize: theme.typography.h4.fontSize,\n      color: theme.colors.text.primary,\n      margin: 0,\n      wordBreak: 'normal',\n      overflowWrap: 'anywhere',\n    }),\n  };\n};\n","import { useLocation } from 'react-router-dom';\n\nimport { config } from '@grafana/runtime';\nimport { EmptyState, Grid } from '@grafana/ui';\nimport { t } from 'app/core/internationalization';\n\nimport { CatalogPlugin, PluginListDisplayMode } from '../types';\n\nimport { PluginListItem } from './PluginListItem';\n\ninterface Props {\n  plugins: CatalogPlugin[];\n  displayMode: PluginListDisplayMode;\n  isLoading?: boolean;\n}\n\nexport const PluginList = ({ plugins, displayMode, isLoading }: Props) => {\n  const isList = displayMode === PluginListDisplayMode.List;\n  const { pathname } = useLocation();\n  const pathName = config.appSubUrl + (pathname.endsWith('/') ? pathname.slice(0, -1) : pathname);\n\n  if (!isLoading && plugins.length === 0) {\n    return <EmptyState variant=\"not-found\" message={t('plugins.empty-state.message', 'No plugins found')} />;\n  }\n\n  return (\n    <Grid gap={3} {...(isList ? { columns: 1 } : { minColumnWidth: 34 })} data-testid=\"plugin-list\">\n      {isLoading\n        ? new Array(50).fill(null).map((_, index) => <PluginListItem.Skeleton key={index} displayMode={displayMode} />)\n        : plugins.map((plugin) => (\n            <PluginListItem key={plugin.id} plugin={plugin} pathName={pathName} displayMode={displayMode} />\n          ))}\n    </Grid>\n  );\n};\n","import { useState, useRef } from 'react';\nimport * as React from 'react';\nimport { useDebounce } from 'react-use';\n\nimport { FilterInput } from '@grafana/ui';\n\ninterface Props {\n  value?: string;\n  onSearch: (value: string) => void;\n}\n\n// useDebounce has a bug which causes it to fire on first render. This wrapper prevents that.\n// https://github.com/streamich/react-use/issues/759\nconst useDebounceWithoutFirstRender = (callBack: () => void, delay = 0, deps: React.DependencyList = []) => {\n  const isFirstRender = useRef(true);\n  const debounceDeps = [...deps, isFirstRender];\n\n  return useDebounce(\n    () => {\n      if (isFirstRender.current) {\n        isFirstRender.current = false;\n        return;\n      }\n      return callBack();\n    },\n    delay,\n    debounceDeps\n  );\n};\n\nexport const SearchField = ({ value, onSearch }: Props) => {\n  const [query, setQuery] = useState(value);\n\n  useDebounceWithoutFirstRender(() => onSearch(query ?? ''), 500, [query]);\n\n  return (\n    <FilterInput\n      value={query}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter' || e.keyCode === 13) {\n          onSearch(e.currentTarget.value);\n        }\n      }}\n      placeholder=\"Search Grafana plugins\"\n      onChange={(value) => {\n        setQuery(value);\n      }}\n      width={46}\n    />\n  );\n};\n","import { locationService } from '@grafana/runtime';\n\nexport const useHistory = () => {\n  return {\n    push: ({ query }: { query: Parameters<typeof locationService.partial>[0] }) => {\n      locationService.partial(query);\n    },\n  };\n};\n","import { css } from '@emotion/css';\nimport { ReactElement } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { SelectableValue, GrafanaTheme2, PluginType } from '@grafana/data';\nimport { locationSearchToObject } from '@grafana/runtime';\nimport { Select, RadioButtonGroup, useStyles2, Tooltip, Field } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { getNavModel } from 'app/core/selectors/navModel';\nimport { ROUTES as CONNECTIONS_ROUTES } from 'app/features/connections/constants';\nimport { useSelector } from 'app/types';\n\nimport { HorizontalGroup } from '../components/HorizontalGroup';\nimport { PluginList } from '../components/PluginList';\nimport { RoadmapLinks } from '../components/RoadmapLinks';\nimport { SearchField } from '../components/SearchField';\nimport { Sorters } from '../helpers';\nimport { useHistory } from '../hooks/useHistory';\nimport { useGetAll, useIsRemotePluginsAvailable, useDisplayMode } from '../state/hooks';\nimport { PluginListDisplayMode } from '../types';\n\nexport default function Browse({ route }: GrafanaRouteComponentProps): ReactElement | null {\n  const location = useLocation();\n  const locationSearch = locationSearchToObject(location.search);\n  const navModel = useSelector((state) => getNavModel(state.navIndex, 'plugins'));\n  const { displayMode, setDisplayMode } = useDisplayMode();\n  const styles = useStyles2(getStyles);\n  const history = useHistory();\n  const remotePluginsAvailable = useIsRemotePluginsAvailable();\n  const keyword = locationSearch.q?.toString() || '';\n  const filterBy = locationSearch.filterBy?.toString() || 'all';\n  const filterByType = (locationSearch.filterByType as PluginType | 'all') || 'all';\n  const sortBy = (locationSearch.sortBy as Sorters) || Sorters.nameAsc;\n  const { isLoading, error, plugins } = useGetAll(\n    {\n      keyword,\n      type: filterByType !== 'all' ? filterByType : undefined,\n      isInstalled: filterBy === 'installed' ? true : undefined,\n      hasUpdate: filterBy === 'has-update' ? true : undefined,\n    },\n    sortBy\n  );\n\n  const filterByOptions = [\n    { value: 'all', label: 'All' },\n    { value: 'installed', label: 'Installed' },\n    { value: 'has-update', label: 'New Updates' },\n  ];\n\n  const onSortByChange = (value: SelectableValue<string>) => {\n    history.push({ query: { sortBy: value.value } });\n  };\n\n  const onFilterByChange = (value: string) => {\n    history.push({ query: { filterBy: value } });\n  };\n\n  const onFilterByTypeChange = (value: SelectableValue<string>) => {\n    history.push({ query: { filterByType: value.value } });\n  };\n\n  const onSearch = (q: string) => {\n    history.push({ query: { filterBy, filterByType, q } });\n  };\n\n  // How should we handle errors?\n  if (error) {\n    console.error(error.message);\n    return null;\n  }\n\n  const subTitle = (\n    <div>\n      Extend the Grafana experience with panel plugins and apps. To find more data sources go to{' '}\n      <a className=\"external-link\" href={`${CONNECTIONS_ROUTES.AddNewConnection}?cat=data-source`}>\n        Connections\n      </a>\n      .\n    </div>\n  );\n\n  return (\n    <Page navModel={navModel} subTitle={subTitle}>\n      <Page.Contents>\n        <HorizontalGroup wrap>\n          <Field label=\"Search\">\n            <SearchField value={keyword} onSearch={onSearch} />\n          </Field>\n          <HorizontalGroup wrap className={styles.actionBar}>\n            {/* Filter by type */}\n            <Field label=\"Type\">\n              <Select\n                aria-label=\"Plugin type filter\"\n                value={filterByType}\n                onChange={onFilterByTypeChange}\n                width={18}\n                options={[\n                  { value: 'all', label: 'All' },\n                  { value: 'datasource', label: 'Data sources' },\n                  { value: 'panel', label: 'Panels' },\n                  { value: 'app', label: 'Applications' },\n                ]}\n              />\n            </Field>\n\n            {/* Filter by installed / all */}\n            {remotePluginsAvailable ? (\n              <Field label=\"State\">\n                <RadioButtonGroup value={filterBy} onChange={onFilterByChange} options={filterByOptions} />\n              </Field>\n            ) : (\n              <Tooltip\n                content=\"This filter has been disabled because the Grafana server cannot access grafana.com\"\n                placement=\"top\"\n              >\n                <div>\n                  <Field label=\"State\">\n                    <RadioButtonGroup\n                      disabled={true}\n                      value={filterBy}\n                      onChange={onFilterByChange}\n                      options={filterByOptions}\n                    />\n                  </Field>\n                </div>\n              </Tooltip>\n            )}\n\n            {/* Sorting */}\n            <Field label=\"Sort\">\n              <Select\n                aria-label=\"Sort Plugins List\"\n                width={24}\n                value={sortBy}\n                onChange={onSortByChange}\n                options={[\n                  { value: 'nameAsc', label: 'By name (A-Z)' },\n                  { value: 'nameDesc', label: 'By name (Z-A)' },\n                  { value: 'updated', label: 'By updated date' },\n                  { value: 'published', label: 'By published date' },\n                  { value: 'downloads', label: 'By downloads' },\n                ]}\n              />\n            </Field>\n\n            {/* Display mode */}\n            <Field label=\"View\">\n              <RadioButtonGroup<PluginListDisplayMode>\n                className={styles.displayAs}\n                value={displayMode}\n                onChange={setDisplayMode}\n                options={[\n                  {\n                    value: PluginListDisplayMode.Grid,\n                    icon: 'table',\n                    description: 'Display plugins in a grid layout',\n                  },\n                  { value: PluginListDisplayMode.List, icon: 'list-ul', description: 'Display plugins in list' },\n                ]}\n              />\n            </Field>\n          </HorizontalGroup>\n        </HorizontalGroup>\n        <div className={styles.listWrap}>\n          <PluginList plugins={plugins} displayMode={displayMode} isLoading={isLoading} />\n        </div>\n        <RoadmapLinks />\n      </Page.Contents>\n    </Page>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  actionBar: css({\n    [theme.breakpoints.up('xl')]: {\n      marginLeft: 'auto',\n    },\n  }),\n  listWrap: css({\n    marginTop: theme.spacing(2),\n  }),\n  displayAs: css({\n    svg: {\n      marginRight: 0,\n    },\n  }),\n});\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { PluginError, PluginType, unEscapeStringFromRegex } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\n\nimport { filterByKeyword } from '../helpers';\nimport { RequestStatus, PluginCatalogStoreState } from '../types';\n\nimport { pluginsAdapter } from './reducer';\n\nexport const selectRoot = (state: PluginCatalogStoreState) => state.plugins;\n\nexport const selectItems = createSelector(selectRoot, ({ items }) => items);\n\nexport const selectDisplayMode = createSelector(selectRoot, ({ settings }) => settings.displayMode);\n\nexport const { selectAll, selectById } = pluginsAdapter.getSelectors(selectItems);\n\nexport type PluginFilters = {\n  // Searches for a string in certain fields (e.g. \"name\" or \"orgName\")\n  // (Note: this will be an escaped regex string as it comes from `FilterInput`)\n  keyword?: string;\n\n  // (Optional, only applied if set)\n  type?: PluginType;\n\n  // (Optional, only applied if set)\n  isInstalled?: boolean;\n\n  // (Optional, only applied if set)\n  isEnterprise?: boolean;\n\n  // (Optional, only applied if set)\n  hasUpdate?: boolean;\n};\n\nexport const selectPlugins = (filters: PluginFilters) =>\n  createSelector(selectAll, (plugins) => {\n    const keyword = filters.keyword ? unEscapeStringFromRegex(filters.keyword.toLowerCase()) : '';\n    const filteredPluginIds = keyword !== '' ? filterByKeyword(plugins, keyword) : null;\n\n    if (keyword) {\n      reportInteraction('plugins_search', { resultsCount: filteredPluginIds?.length });\n    }\n    return plugins.filter((plugin) => {\n      if (keyword && filteredPluginIds == null) {\n        return false;\n      }\n\n      if (keyword && !filteredPluginIds?.includes(plugin.id)) {\n        return false;\n      }\n\n      if (filters.type && plugin.type !== filters.type) {\n        return false;\n      }\n\n      if (filters.isInstalled !== undefined && plugin.isInstalled !== filters.isInstalled) {\n        return false;\n      }\n\n      if (filters.isEnterprise !== undefined && plugin.isEnterprise !== filters.isEnterprise) {\n        return false;\n      }\n\n      if (filters.hasUpdate !== undefined && plugin.hasUpdate !== filters.hasUpdate) {\n        return false;\n      }\n\n      return true;\n    });\n  });\n\nexport const selectPluginErrors = (filterByPluginType?: PluginType) =>\n  createSelector(selectAll, (plugins) => {\n    const pluginErrors: PluginError[] = [];\n    for (const plugin of plugins) {\n      if (plugin.error && (!filterByPluginType || plugin.type === filterByPluginType)) {\n        pluginErrors.push({\n          pluginId: plugin.id,\n          errorCode: plugin.error,\n          pluginType: plugin.type,\n        });\n      }\n    }\n    return pluginErrors;\n  });\n\n// The following selectors are used to get information about the outstanding or completed plugins-related network requests.\nexport const selectRequest = (actionType: string) =>\n  createSelector(selectRoot, ({ requests = {} }) => requests[actionType]);\n\nexport const selectIsRequestPending = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request?.status === RequestStatus.Pending);\n\nexport const selectRequestError = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) =>\n    request?.status === RequestStatus.Rejected ? request?.error : null\n  );\n\nexport const selectIsRequestNotFetched = (actionType: string) =>\n  createSelector(selectRequest(actionType), (request) => request === undefined);\n","import { useEffect, useMemo } from 'react';\n\nimport { PluginError, PluginType } from '@grafana/data';\nimport { useDispatch, useSelector } from 'app/types';\n\nimport { sortPlugins, Sorters } from '../helpers';\nimport { CatalogPlugin, PluginListDisplayMode } from '../types';\n\nimport { fetchAll, fetchDetails, fetchRemotePlugins, install, uninstall, fetchAllLocal, unsetInstall } from './actions';\nimport { setDisplayMode } from './reducer';\nimport {\n  selectPlugins,\n  selectById,\n  selectIsRequestPending,\n  selectRequestError,\n  selectIsRequestNotFetched,\n  selectDisplayMode,\n  selectPluginErrors,\n  type PluginFilters,\n} from './selectors';\n\nexport const useGetAll = (filters: PluginFilters, sortBy: Sorters = Sorters.nameAsc) => {\n  useFetchAll();\n\n  const selector = useMemo(() => selectPlugins(filters), [filters]);\n  const plugins = useSelector(selector);\n  // As the locally installed plugins load quicker than the remote ones, we only show a loading state until these are being loaded\n  // (In case the remote ones are not loaded within a reasonable timeout, we will merge those with the locally installed plugins once they are loaded)\n  const { isLoading, error } = useLocalFetchStatus();\n  const sortedPlugins = sortPlugins(plugins, sortBy);\n\n  return {\n    isLoading,\n    error,\n    plugins: sortedPlugins,\n  };\n};\n\nexport const useGetSingle = (id: string): CatalogPlugin | undefined => {\n  useFetchAll();\n  useFetchDetails(id);\n\n  return useSelector((state) => selectById(state, id));\n};\n\nexport const useGetSingleLocalWithoutDetails = (id: string): CatalogPlugin | undefined => {\n  useFetchAllLocal();\n  return useSelector((state) => selectById(state, id));\n};\n\nexport const useGetErrors = (filterByPluginType?: PluginType): PluginError[] => {\n  useFetchAll();\n\n  return useSelector(selectPluginErrors(filterByPluginType));\n};\n\nexport const useInstall = () => {\n  const dispatch = useDispatch();\n  return (id: string, version?: string, isUpdating?: boolean) => dispatch(install({ id, version, isUpdating }));\n};\n\nexport const useUnsetInstall = () => {\n  const dispatch = useDispatch();\n\n  return () => dispatch(unsetInstall());\n};\n\nexport const useUninstall = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(uninstall(id));\n};\n\nexport const useIsRemotePluginsAvailable = () => {\n  const error = useSelector(selectRequestError(fetchRemotePlugins.typePrefix));\n  return error === null;\n};\n\nexport const useLocalFetchStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending('plugins/fetchLocal'));\n  const error = useSelector(selectRequestError('plugins/fetchLocal'));\n\n  return { isLoading, error };\n};\n\nexport const useFetchStatus = () => {\n  const isAllLoading = useSelector(selectIsRequestPending(fetchAll.typePrefix));\n  const isLocalLoading = useSelector(selectIsRequestPending('plugins/fetchLocal'));\n  const isRemoteLoading = useSelector(selectIsRequestPending('plugins/fetchRemote'));\n  const isLoading = isAllLoading || isLocalLoading || isRemoteLoading;\n  const error = useSelector(selectRequestError(fetchAll.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useFetchDetailsStatus = () => {\n  const isLoading = useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const error = useSelector(selectRequestError(fetchDetails.typePrefix));\n\n  return { isLoading, error };\n};\n\nexport const useInstallStatus = () => {\n  const isInstalling = useSelector(selectIsRequestPending(install.typePrefix));\n  const error = useSelector(selectRequestError(install.typePrefix));\n\n  return { isInstalling, error };\n};\n\nexport const useUninstallStatus = () => {\n  const isUninstalling = useSelector(selectIsRequestPending(uninstall.typePrefix));\n  const error = useSelector(selectRequestError(uninstall.typePrefix));\n\n  return { isUninstalling, error };\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAll = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAll.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAll());\n  }, []); // eslint-disable-line\n};\n\n// Only fetches in case they were not fetched yet\nexport const useFetchAllLocal = () => {\n  const dispatch = useDispatch();\n  const isNotFetched = useSelector(selectIsRequestNotFetched(fetchAllLocal.typePrefix));\n\n  useEffect(() => {\n    isNotFetched && dispatch(fetchAllLocal());\n  }, []); // eslint-disable-line\n};\n\nexport const useFetchDetails = (id: string) => {\n  const dispatch = useDispatch();\n  const plugin = useSelector((state) => selectById(state, id));\n  const isNotFetching = !useSelector(selectIsRequestPending(fetchDetails.typePrefix));\n  const shouldFetch = isNotFetching && plugin && !plugin.details;\n\n  useEffect(() => {\n    shouldFetch && dispatch(fetchDetails(id));\n  }, [plugin]); // eslint-disable-line\n};\n\nexport const useFetchDetailsLazy = () => {\n  const dispatch = useDispatch();\n\n  return (id: string) => dispatch(fetchDetails(id));\n};\n\nexport const useDisplayMode = () => {\n  const dispatch = useDispatch();\n  const displayMode = useSelector(selectDisplayMode);\n\n  return {\n    displayMode,\n    setDisplayMode: (v: PluginListDisplayMode) => dispatch(setDisplayMode(v)),\n  };\n};\n"],"names":["PluginDisabledBadge","error","tooltip","errorCodeToTooltip","Badge","getBadgeColor","theme","PluginInstalledBadge","customBadgeStyles","PluginEnterpriseBadge","plugin","Stack","PluginSignatureBadge","PluginUpdateAvailableBadge","styles","getStyles","PluginAngularBadge","PluginDeprecatedBadge","RoadmapLinks","PluginListItemBadges","hasUpdate","PluginLogo","alt","className","src","height","LOGO_SIZE","PluginListItemComponent","pathName","displayMode","isList","reportUserClickInteraction","Icon","PluginListItemSkeleton","rootProps","PluginListItem","PluginList","plugins","isLoading","pathname","config","EmptyState","Grid","_","index","useDebounceWithoutFirstRender","callBack","delay","deps","isFirstRender","debounceDeps","useDebounce","SearchField","value","onSearch","query","setQuery","FilterInput","e","useHistory","Browse","route","location","locationSearch","navModel","state","setDisplayMode","history","remotePluginsAvailable","keyword","filterBy","filterByType","sortBy","filterByOptions","onSortByChange","onFilterByChange","onFilterByTypeChange","q","subTitle","Page","HorizontalGroup","Field","Select","RadioButtonGroup","Tooltip","selectRoot","selectItems","items","selectDisplayMode","settings","selectAll","selectPlugins","filters","filteredPluginIds","selectPluginErrors","filterByPluginType","pluginErrors","selectRequest","actionType","requests","selectIsRequestPending","request","selectRequestError","useGetAll","useFetchAll","selector","useLocalFetchStatus","sortedPlugins","useGetSingle","id","useFetchDetails","useGetSingleLocalWithoutDetails","useFetchAllLocal","useGetErrors","useInstall","dispatch","version","isUpdating","useUnsetInstall","useUninstall","useIsRemotePluginsAvailable","useFetchStatus","isAllLoading","isLocalLoading","isRemoteLoading","useFetchDetailsStatus","useInstallStatus","isInstalling","useUninstallStatus","isUninstalling","isNotFetched","shouldFetch","useFetchDetailsLazy","useDisplayMode","v"],"sourceRoot":""}