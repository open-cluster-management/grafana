{"version":3,"file":"9643.b90152a7d1e89b131398.js","mappings":"4LASO,MAAMA,EAAkB,CAAC,CAAE,OAAAC,EAAQ,uBAAAC,CAAuB,OACxD,OAACC,EAAA,GAAY,CAAC,OAAAF,EAAgB,uBAAAC,CAAA,CAAgD,ECmBvF,EAvB2B,IAAM,CAC/B,KAAM,CAAE,qBAAAE,CAAqB,KAAI,MAAgB,EAC3C,CAAE,KAAAC,EAAM,UAAAC,EAAW,MAAAC,CAAM,KAAIC,EAAA,GAAsBJ,CAAoB,EAE7E,OAAIE,GAAa,CAACD,EACT,aAGLE,KAEA,OAACE,EAAA,EAAK,CAAC,SAAS,QAAQ,MAAM,wCAC3B,gBAAOF,CAAK,EACf,EAICF,KAIE,OAACL,EAAe,CAAC,uBAAwBI,EAAuB,OAAQC,CAAA,CAAM,EAH5E,IAIX,C","sources":["webpack://grafana/./public/app/features/alerting/unified/components/receivers/NewTemplateView.tsx","webpack://grafana/./public/app/features/alerting/unified/components/contact-points/NewMessageTemplate.tsx"],"sourcesContent":["import { AlertManagerCortexConfig } from 'app/plugins/datasource/alertmanager/types';\n\nimport { TemplateForm } from './TemplateForm';\n\ninterface Props {\n  config: AlertManagerCortexConfig;\n  alertManagerSourceName: string;\n}\n\nexport const NewTemplateView = ({ config, alertManagerSourceName }: Props) => {\n  return <TemplateForm config={config} alertManagerSourceName={alertManagerSourceName} />;\n};\n","import { Alert } from '@grafana/ui';\n\nimport { useAlertmanagerConfig } from '../../hooks/useAlertmanagerConfig';\nimport { useAlertmanager } from '../../state/AlertmanagerContext';\nimport { NewTemplateView } from '../receivers/NewTemplateView';\n\nconst NewMessageTemplate = () => {\n  const { selectedAlertmanager } = useAlertmanager();\n  const { data, isLoading, error } = useAlertmanagerConfig(selectedAlertmanager);\n\n  if (isLoading && !data) {\n    return 'loading...';\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" title=\"Failed to fetch notification template\">\n        {String(error)}\n      </Alert>\n    );\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return <NewTemplateView alertManagerSourceName={selectedAlertmanager!} config={data} />;\n};\n\nexport default NewMessageTemplate;\n"],"names":["NewTemplateView","config","alertManagerSourceName","TemplateForm","selectedAlertmanager","data","isLoading","error","useAlertmanagerConfig","Alert"],"sourceRoot":""}