"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[3648],{62391:(q,S,a)=>{a.r(S),a.d(S,{plugin:()=>W});var R=a(40187),n=a(74848),I=a(32196),L=a(55127),E=a.n(L),g=a(96540),x=a(65879),A=a(89667),F=a(83195),D=a(14110),m=a(32264),V=a(19347),p=a(14186),v=a(90182),$=a(67061),b=a(10354),T=a(42418),C=a(39268),z=a(76892),Q=a(37270),M=a(40845),B=a(2913),j=a(40489),N=a(39408),u=a(68706),O=a(32372);function P({value:f,onChange:r}){const[e,t]=(0,g.useState)(""),[s,l]=(0,g.useState)(f.query??"");(0,g.useEffect)(()=>{t(JSON.stringify({...{query:"*",location:"",ds_uid:"",sort:"",tags:[],kind:[],explain:!1,facet:[{field:"kind"},{field:"tags"}],from:0,limit:20},...f},null,2))},[f]);const o=()=>{s!==f.query&&r({...f,query:s})},i=c=>{c.key==="Enter"&&o()},d=c=>{try{const h=JSON.parse(c);r(h),l(h.query??"")}catch(h){console.log("UNABLE TO parse search",c,h)}};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(C.C,{children:(0,n.jsx)(p.I,{label:"Query",grow:!0,labelWidth:12,children:(0,n.jsx)(b.p,{placeholder:"Everything",value:s,onChange:c=>l(c.currentTarget.value),onKeyDown:i,onBlur:o,spellCheck:!1})})}),(0,n.jsx)(O.B,{height:300,language:"json",value:e,onBlur:d,onSave:d,showMiniMap:!1,showLineNumbers:!0})]})}const y=12;class U extends g.PureComponent{constructor(r){super(r),this.state={channels:[],channelFields:{}},this.queryTypes=[{label:"Random Walk",value:u.nj.RandomWalk,description:"Random signal within the selected time range"},{label:"Live Measurements",value:u.nj.LiveMeasurements,description:"Stream real-time measurements from Grafana"},{label:"List public files",value:u.nj.List,description:"Show directory listings for public resources"}],this.onQueryTypeChange=e=>{const{onChange:t,query:s,onRunQuery:l}=this.props;t({...s,queryType:e.value}),l(),this.loadChannelInfo()},this.onChannelChange=e=>{const{onChange:t,query:s,onRunQuery:l}=this.props;t({...s,channel:e?.value}),l()},this.onFieldNamesChange=e=>{const{onChange:t,query:s,onRunQuery:l}=this.props;let o=[];if(Array.isArray(e)?o=e.map(i=>i.value):e.value&&(o=[e.value]),o.length===1&&!s.filter?.fields?.length&&s.channel){const d=(this.state.channelFields[s.channel]??[]).find(c=>c.value==="time"||c.value==="Time");d&&d.value&&d.value!==o[0]&&(o=[d.value,...o])}t({...s,filter:{...s.filter,fields:o}}),l()},this.checkAndUpdateValue=(e,t)=>{const{onChange:s,query:l,onRunQuery:o}=this.props;if(e==="buffer"){let i;if(t)try{i=x.intervalToSeconds(t)*1e3}catch(d){console.warn("ERROR",d)}s({...l,buffer:i})}else s({...l,[e]:t});o()},this.handleEnterKey=e=>{e.key==="Enter"&&this.checkAndUpdateValue("buffer",e.currentTarget.value)},this.handleBlur=e=>{this.checkAndUpdateValue("buffer",e.currentTarget.value)},this.onFolderChanged=e=>{const{onChange:t,query:s,onRunQuery:l}=this.props;t({...s,path:e?.value}),l()},this.fileListRenderer=(e,t)=>null,this.onFileDrop=(e,t,s)=>{j.vI(e).subscribe(l=>{const o=[];l.dataFrames.forEach(i=>{const d=(0,A.Nw)(i);o.push(d)}),this.props.onChange({...this.props.query,file:{name:l.file.name,size:l.file.size},queryType:u.nj.Snapshot,snapshot:o}),this.props.onRunQuery(),(0,D.rR)("grafana_datasource_drop_files",{number_of_files:t.length+e.length,accepted_files:e.map(i=>({type:i.type,size:i.size})),rejected_files:t.map(i=>({type:i.file.type,size:i.file.size}))})})},this.onSearchChange=e=>{const{query:t,onChange:s,onRunQuery:l}=this.props;s({...t,search:e}),l()},m.$.featureToggles.panelTitleSearch&&B.yn&&this.queryTypes.push({label:"Search",value:u.nj.Search,description:"Search for grafana resources"}),m.$.featureToggles.editPanelCSVDragAndDrop&&this.queryTypes.push({label:"Spreadsheet or snapshot",value:u.nj.Snapshot,description:"Query an uploaded spreadsheet or a snapshot"})}loadChannelInfo(){(0,N.l)().then(r=>{this.setState(r)})}loadFolderInfo(){const r={targets:[{queryType:u.nj.List,refId:"A"}]};(0,V.l)().get("-- Grafana --").then(e=>{e.query(r).subscribe({next:s=>{if(s.data.length){const o=s.data[0].fields[0].values.map(i=>({value:i,label:i}));this.setState({folders:o})}}})})}componentDidMount(){this.loadChannelInfo()}renderMeasurementsQuery(){let{channel:r,filter:e,buffer:t}=this.props.query,{channels:s,channelFields:l}=this.state,o=s.find(h=>h.value===r);r&&!o&&(o={value:r,label:r,description:`Connected to ${r}`},s=[o,...s]);const i=new Set,d=r?l[r]??[]:[];if(e?.fields)for(const h of e.fields)i.has(h)||(d.push({value:h,label:`${h} (not loaded)`,description:"Configured, but not found in the query results"}),i.add(h));let c="";return t&&(c=x.secondsToHms(t/1e3)),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(p.I,{label:"Channel",grow:!0,labelWidth:y,children:(0,n.jsx)(v.l6,{options:s,value:o||"",onChange:this.onChannelChange,allowCustomValue:!0,backspaceRemovesValue:!0,placeholder:"Select measurements channel",isClearable:!0,noOptionsMessage:"Enter channel name",formatCreateLabel:h=>`Connect to: ${h}`})}),r&&(0,n.jsxs)($.B,{direction:"row",gap:0,children:[(0,n.jsx)(p.I,{label:"Fields",grow:!0,labelWidth:y,children:(0,n.jsx)(v.l6,{options:d,value:e?.fields||[],onChange:this.onFieldNamesChange,allowCustomValue:!0,backspaceRemovesValue:!0,placeholder:"All fields",isClearable:!0,noOptionsMessage:"Unable to list all fields",formatCreateLabel:h=>`Field: ${h}`,isSearchable:!0,isMulti:!0})}),(0,n.jsx)(p.I,{label:"Buffer",children:(0,n.jsx)(b.p,{placeholder:"Auto",width:12,defaultValue:c,onKeyDown:this.handleEnterKey,onBlur:this.handleBlur,spellCheck:!1})})]}),(0,n.jsx)(T.F,{title:"Grafana Live - Measurements",severity:"info",children:"This supports real-time event streams in Grafana core. This feature is under heavy development. Expect the interfaces and structures to change as this becomes more production ready."})]})}renderListPublicFiles(){let{path:r}=this.props.query,{folders:e}=this.state;e||(e=[],this.loadFolderInfo());const t=e.find(s=>s.value===r);return r&&!t&&(e=[...e,{value:r,label:r}]),(0,n.jsx)(C.C,{children:(0,n.jsx)(p.I,{label:"Path",grow:!0,labelWidth:y,children:(0,n.jsx)(v.l6,{options:e,value:t||"",onChange:this.onFolderChanged,allowCustomValue:!0,backspaceRemovesValue:!0,placeholder:"Select folder",isClearable:!0,formatCreateLabel:s=>`Folder: ${s}`})})})}renderSnapshotQuery(){const{query:r,theme:e}=this.props,t=r.file,s=G(e),l=(0,F.j_)("decbytes")(t?t.size:0);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(C.C,{children:(0,n.jsx)(p.I,{label:"Snapshot",grow:!0,labelWidth:y,children:(0,n.jsx)(z.c,{children:E()("frame",r.snapshot?.length??0,!0)})})}),m.$.featureToggles.editPanelCSVDragAndDrop&&(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(Q.gH,{readAs:"readAsArrayBuffer",fileListRenderer:this.fileListRenderer,options:{onDrop:this.onFileDrop,maxSize:j.o2,multiple:!1,accept:j.ZF},children:(0,n.jsx)(Q.wI,{primaryText:this.props?.query?.file?"Replace file":"Drop file here or click to upload"})}),t&&(0,n.jsxs)("div",{className:s.file,children:[(0,n.jsx)("span",{children:t?.name}),(0,n.jsx)("span",{children:(0,n.jsx)("span",{children:(0,F.cN)(l)})})]})]})]})}render(){const r={...u.uJ,...this.props.query},{queryType:e}=r;let t=this.queryTypes;return e===u.nj.Snapshot&&!m.$.featureToggles.editPanelCSVDragAndDrop&&(t=[...this.queryTypes,{label:"Snapshot",value:e}]),(0,n.jsxs)(n.Fragment,{children:[e===u.nj.Search&&(0,n.jsx)(T.F,{title:"Grafana Search",severity:"info",children:"Using this datasource to call the new search system is experimental, and subject to change at any time without notice."}),(0,n.jsx)(C.C,{children:(0,n.jsx)(p.I,{label:"Query type",grow:!0,labelWidth:y,children:(0,n.jsx)(v.l6,{options:t,value:t.find(s=>s.value===e)||t[0],onChange:this.onQueryTypeChange})})}),e===u.nj.LiveMeasurements&&this.renderMeasurementsQuery(),e===u.nj.List&&this.renderListPublicFiles(),e===u.nj.Snapshot&&this.renderSnapshotQuery(),e===u.nj.Search&&(0,n.jsx)(P,{value:r.search??{},onChange:this.onSearchChange})]})}}const J=(0,M.cV)(U);function G(f){return{file:(0,I.css)`
      width: 100%;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      padding: ${f.spacing(2)};
      border: 1px dashed ${f.colors.border.medium};
      background-color: ${f.colors.background.secondary};
      margin-top: ${f.spacing(1)};
    `}}var K=a(90183);const W=new R.tD(K.i).setQueryEditor(J)}}]);

//# sourceMappingURL=grafanaPlugin.c7b647ca33696fbb2e7e.js.map