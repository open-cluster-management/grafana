{"version":3,"file":"8786.765ce70d386dcc789a8e.js","mappings":"mTAaO,MAAMA,EAAc,IAAM,CAC/B,MAAMC,KAAY,MAAmB,EAC/B,CACJ,aAAAC,EACA,SAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACtB,KAAI,MAAkB,EAChB,CAACC,EAAWC,CAAY,KAAI,YAAS,EAAK,EAE1CC,EAAYC,GAAwB,IACxC,MAAc,EACX,KAAK,mBAAoBA,CAAS,EAClC,KAAK,IAAM,CACVF,EAAa,EAAI,CACnB,CAAC,EACA,MAAOG,GAAQ,CACd,MAAMC,EAAMD,EAAI,MAAM,SAAWA,EACjCR,EAAU,QAAQS,CAAG,CACvB,CAAC,CACL,EAEA,OAAIL,KAEA,QAAC,OACC,oBAAC,KAAE,gHAAoG,KACvG,OAAC,KAAS,CAAC,OAAO,IAAK,MACvB,OAAC,KAAU,CAAC,QAAQ,UAAU,QAAM,MAAU,EAAE,UAAY,UAAW,2BAEvE,GACF,KAKF,QAAC,QAAK,SAAUH,EAAaK,CAAQ,EACnC,oBAACI,EAAA,EAAM,CAAC,wBAAY,KACpB,OAACC,EAAA,GACC,MAAM,QACN,YAAY,kEACZ,QAAS,CAAC,CAACR,EAAO,MAClB,MAAOA,EAAO,OAAO,QAErB,mBAACS,EAAA,GACC,GAAG,QACF,GAAGV,EAAS,QAAS,CACpB,SAAU,oBACV,QAAS,CACP,MAAO,KACP,QAAS,kBACX,CACF,CAAC,EACD,YAAY,QACd,EACF,KACA,QAACW,EAAA,EAAK,CACJ,oBAACC,EAAA,GAAM,CAAC,KAAK,SAAS,mCAAuB,KAC7C,OAAC,KAAU,CAAC,KAAK,OAAO,QAAM,MAAU,EAAE,UAAY,SAAU,yBAEhE,GACF,GACF,CAEJ,ECvEaC,EAAkB,OAE3B,OAACC,EAAA,GAAW,CACV,mBAAC,KAAQ,CACP,mBAACjB,EAAW,EAAC,EACf,EACF,EAIJ,EAAegB,C,4DCXR,MAAME,EACX,wIAEK,SAASC,GAAU,CACxB,MAAMC,EAAS,IAAO,aAAa,YACnC,MAAO,CAAC,EAAEA,GAAUA,EAAS,EAC/B,CAEO,MAAMC,EAAiB,IAAMF,EAAQ,GAAK,IAAO,eAAe,iB","sources":["webpack://grafana/./public/app/core/components/Signup/VerifyEmail.tsx","webpack://grafana/./public/app/core/components/Signup/VerifyEmailPage.tsx","webpack://grafana/./public/app/features/admin/utils.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Field, Input, Button, Legend, Container, LinkButton, Stack } from '@grafana/ui';\nimport { getConfig } from 'app/core/config';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { w3cStandardEmailValidator } from 'app/features/admin/utils';\n\ninterface EmailDTO {\n  email: string;\n}\n\nexport const VerifyEmail = () => {\n  const notifyApp = useAppNotification();\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm<EmailDTO>();\n  const [emailSent, setEmailSent] = useState(false);\n\n  const onSubmit = (formModel: EmailDTO) => {\n    getBackendSrv()\n      .post('/api/user/signup', formModel)\n      .then(() => {\n        setEmailSent(true);\n      })\n      .catch((err) => {\n        const msg = err.data?.message || err;\n        notifyApp.warning(msg);\n      });\n  };\n\n  if (emailSent) {\n    return (\n      <div>\n        <p>An email with a verification link has been sent to the email address. You should receive it shortly.</p>\n        <Container margin=\"md\" />\n        <LinkButton variant=\"primary\" href={getConfig().appSubUrl + '/signup'}>\n          Complete Signup\n        </LinkButton>\n      </div>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Legend>Verify Email</Legend>\n      <Field\n        label=\"Email\"\n        description=\"Enter your email address to get a verification link sent to you\"\n        invalid={!!errors.email}\n        error={errors.email?.message}\n      >\n        <Input\n          id=\"email\"\n          {...register('email', {\n            required: 'Email is required',\n            pattern: {\n              value: w3cStandardEmailValidator,\n              message: 'Email is invalid',\n            },\n          })}\n          placeholder=\"Email\"\n        />\n      </Field>\n      <Stack>\n        <Button type=\"submit\">Send verification email</Button>\n        <LinkButton fill=\"text\" href={getConfig().appSubUrl + '/login'}>\n          Back to login\n        </LinkButton>\n      </Stack>\n    </form>\n  );\n};\n","import { LoginLayout, InnerBox } from '../Login/LoginLayout';\n\nimport { VerifyEmail } from './VerifyEmail';\n\nexport const VerifyEmailPage = () => {\n  return (\n    <LoginLayout>\n      <InnerBox>\n        <VerifyEmail />\n      </InnerBox>\n    </LoginLayout>\n  );\n};\n\nexport default VerifyEmailPage;\n","import { config } from '@grafana/runtime/src';\n\n// https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address\nexport const w3cStandardEmailValidator =\n  /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\nexport function isTrial() {\n  const expiry = config.licenseInfo?.trialExpiry;\n  return !!(expiry && expiry > 0);\n}\n\nexport const highlightTrial = () => isTrial() && config.featureToggles.featureHighlights;\n"],"names":["VerifyEmail","notifyApp","handleSubmit","register","errors","emailSent","setEmailSent","onSubmit","formModel","err","msg","Legend","Field","Input","Stack","Button","VerifyEmailPage","LoginLayout","w3cStandardEmailValidator","isTrial","expiry","highlightTrial"],"sourceRoot":""}